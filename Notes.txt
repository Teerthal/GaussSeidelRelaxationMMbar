These are the notes for understanding the structure of the code by Teerthal -Oct,2021

MakeFile
    The makefile consists of the relevant compiler flags and all the file dependencies to run relaxMain.


Structure:

    relaxMain: This is the main file that executes the program.
    There are 2 sets of input parameters: 'parameters' and 'initialParameters'

    Parameters: The comments in the file are self explanatory and explain a lot of the convention.
     This file declares the size of the lattice, spacing, no of fields, time steps and relax parameters.
    
    initialParameters: These are problem specific parameters

    ----initialconditions---File:icMMbarTwistedNumerical-----
    First file call by relaxMain is to initialconditions.
        initialconditions is a function defined in icMMbarTwistedNumerical.f. (icMonopole.f seems to be an eary attempt at parallelisation)
        This file lays out the monopole configuration using the given parameters.
        "Look into getarg and the called filenames"

        Names declared here:
        Gauged SO(3) model contains 3 real scalar fields:
        c f(1)= phi(1), f(2)=phi(2), f(3)=phi(3), 
        c and gauge fields: 2
        c f(4)=W^1_0, f(5)=W^1_1, f(6)=W^1_2, f(7)=W^1_3,
        c f(8)=W^2_0, f(9)=W^2_1, f(10)=W^2_2, f(11)=W^2_3,
        c f(12)=W^3_0, f(13)=W^3_1, f(14)=W^3_2, f(15)=W^3_3.
        c f(19)=|phi|

        Other variables(distances, etc) are declared here

        This file also calls derivates:
    
    ----derivates---File:E=relaxEnergySO3
    function of the field value at coordinates 'i,j,k'.
    Outputs are the first and second order derivatives of f w.r.t x,y,z
    The file loops over all the fields. In this example, there are 35. When the call is made, 
    it computes all the derivatives and sends them as output.
    Calls are made to compute the boundaries at the borders separately with nested 'if' statements.


    The next subroutine execution is to the relaxEnergySO3 and compute the initial energy.
    
    ----relaxEnergySO3------
    subroutine name is energy, a function of the field value, totalenergy and time.
    (Note on functions in fortran: variables are passed as arguments for the function to return the
    variable value)

    The function loops over the entire lattice save for the boundaries. The first function Calls
    made are towards the derivatives, covderiv and fieldstrength.


    -----covderiv-----File:covariantDerivsSO3
    function of the field value, position, and the partial derivatives passed into it from derivatives

    ----fieldstrength----File:fieldstrengthsSO3
    calculates the field strenghts with the field values and the derivates passed to it


    The next structural step in the relaxMain is a do loop call over time to evolve euler and energy over time
    steps.     

    ----evolveeuler---File:RelaxEuler
    Here the algorithm for the Gauss Seidel method is outlined.
    It starts with looping over the lattice sites. The calculations are actually done in
    fluxesNumRelSO3. The evolution itself seems to be a simple process. and done at the end of the code.
    It updates the scalar field values. 

    ----fdflux-----File:fluxesNumRelSO3
    The function takes the field values and computes the laplacian then the 
    scalar fluxes. 

    
    relaxMain then computes the energy and checks if it has reached a minimum and eneds if it has or continues if it hasn't




<---------------Structure--------------->

relaxMain---------------->parameters.inc
         ---------------->initialParameters.inc

         ---------------->initialconditions------>derivatives

         ---------------->energy----------------->derivatives
                                ----------------->covderiv
                                ----------------->fieldstrength

         ---------------->evolveeuler------------>fdflux------------->derivatives
                                                        ------------->covderiv
                                                        ------------->fieldstrength




















Definitions:

fields for SO(3):
     f(1)=phi^1,f(2)=phi^2,f(3)=phi^3,
     f(4)=W^1_0, f(5)=W^1_1, f(6)=W^1_2, f(7)=W^1_3,
     f(8)=W^2_0, f(9)=W^2_1, f(10)=W^2_2, f(11)=W^2_3,
     f(12)=W^3_0, f(13)=W^3_1, f(14)=W^3_2, f(15)=W^3_3,
     gauge fixing functions (Num Rel): f(16)=\partial_i W^1_i, 
     f(17)=\partial_i W^2_i, f(18)=\partial_i W^3_i, 
     f(19)=|{\vec \phi}|
     time derivatives:
     fd(i)=time derivative of f(i) for i=1-3 (scalar fields),
     fd(i)=electric fields(=W^a_{0j}) for i=4-15 (gauge fields).
     fd(19)=time derivative of |phi|


fs=field strength; first index is the number of gauge fields.
      dimension fs(3,0:3,0:3),dfddx(nf),dfddy(nf),dfddz(nf)
cd=covariant derivative; second index is the gauge field index.
      dimension cd(0:3,4),g(nf)


